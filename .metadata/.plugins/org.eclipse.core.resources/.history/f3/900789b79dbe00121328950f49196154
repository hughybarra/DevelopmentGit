package com.wbarra.controller
{
	import com.wbarra.game.objects.Bullet;
	import com.wbarra.game.objects.Ship;
	import com.wbarra.game.objects.Turret;
	import com.wbarra.imagesAndSound.AllMyParticles;
	import com.wbarra.imagesAndSound.AllMySounds;
	import com.wbarra.managers.ShipDistanceCalculator;
	import com.wbarra.screens.GameOver;
	import com.wbarra.screens.GameStage;
	import com.wbarra.screens.GameStart;
	import com.wbarra.utilityBuilder.ScreenEvent;
	
	import flash.media.Sound;
	
	import feathers.controls.ScreenNavigator;
	
	import starling.core.Starling;
	import starling.display.Sprite;
	import starling.events.Event;
	import starling.events.KeyboardEvent;
	import starling.extensions.PDParticleSystem;
	import starling.textures.Texture;
	
	public class Game extends Sprite
	{
		
		
		
		
		private var _gameOver:GameOver;
		private var _screenNum:String = "start screen";
		private var _navigator:ScreenNavigator;
		private var _startScreen:GameStart;
		public function Game()
		{
			super();
			_startScreen = new GameStart();
			addChild(_startScreen);
			_startScreen.addEventListener(ScreenEvent.CHANGE_SCREEN, onChangeScreen);
		}
		private function onChangeScreen(event:ScreenEvent):void
		{
			removeChild(_startScreen);
			gameMode();
			setStage();
		}
		private function setStage():void
		{
			__gameStage = new GameStage();
			addChild( __gameStage );
		}
		private function targetHit(b:Bullet):void
		{
			var psConfig:XML = XML(new  AllMyParticles.EXPLOSION_CONFIG() );
			var psTexture:Texture = Texture.fromBitmap(new AllMyParticles.EXPLOSION());
			var psConfig2:XML = XML(new AllMyParticles.EXPLOSION_CONFIG() );
			var psTexture2:Texture = Texture.fromBitmap(new AllMyParticles.EXPLOSION());
			__ps = new PDParticleSystem(psConfig, psTexture);	
			__ps.x = 0;
			__ps.y = 0;
			addChild( __ps );
			Starling.juggler.add( __ps );
			__ps.emitterX = b.x;
			__ps.emitterY = b.y;
			__ps.start(.01);
			__explosion.play();
			
			if(b._bulletTarget._alive){
				__battleField.removeChild( b._bulletTarget );
				__battleField.removeChild( b );
				
				__score ++; 
				__totalScore ++;
				b._bulletTarget._alive = false;
			}
			
		}
		private function gameOver():void
		{
			__answersArray      = [];
			__bulletArray 		= [];
			__currentQuestions 	= [];
			__shipArray 		= [];
			while( __battleField.numChildren > 0)
			{
				__battleField.removeChildAt(0);8 
			}
			__battleField.removeEventListener(Event.ENTER_FRAME, onEnterFrame);
			removeEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
			__numberOfShips++;
			_gameOver = new GameOver();
			addChild( _gameOver );
			removeChild(__ps);
			Starling.juggler.remove(__ps);
		}
	}
}